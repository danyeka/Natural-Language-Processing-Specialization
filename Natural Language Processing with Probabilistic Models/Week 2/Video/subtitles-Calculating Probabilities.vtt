WEBVTT

1
00:00:00.000 --> 00:00:03.030
Hi again. You'll now
learn how to compute

2
00:00:03.030 --> 00:00:04.470
the probabilities for

3
00:00:04.470 --> 00:00:06.930
your transition and
emission matrices.

4
00:00:06.930 --> 00:00:08.850
Given a corpus, you'll be

5
00:00:08.850 --> 00:00:11.175
able to populate
these two matrices.

6
00:00:11.175 --> 00:00:13.350
Let me show you how
you can do this.

7
00:00:13.350 --> 00:00:17.115
Let's start with how to
populate the transition matrix,

8
00:00:17.115 --> 00:00:19.830
which holds all the
transition probabilities

9
00:00:19.830 --> 00:00:22.020
between states of
your Markov model.

10
00:00:22.020 --> 00:00:24.330
First, let's explore how to

11
00:00:24.330 --> 00:00:26.700
calculate the transition
probabilities

12
00:00:26.700 --> 00:00:28.940
on a conceptual level using

13
00:00:28.940 --> 00:00:32.130
this very small training
corpus as you can see.

14
00:00:32.130 --> 00:00:33.710
The associated parts of

15
00:00:33.710 --> 00:00:37.210
speech tags are depicted
by the background color.

16
00:00:37.210 --> 00:00:40.130
To calculate the
transition probabilities,

17
00:00:40.130 --> 00:00:42.140
you actually only
use the parts of

18
00:00:42.140 --> 00:00:44.240
speech tags from your
training corpus,

19
00:00:44.240 --> 00:00:46.475
so to calculate the probability

20
00:00:46.475 --> 00:00:48.680
of the blue parts of speech tag,

21
00:00:48.680 --> 00:00:50.655
transitioning to the purple one,

22
00:00:50.655 --> 00:00:53.390
you first have to count
the occurrences of

23
00:00:53.390 --> 00:00:56.940
that tag combination in
your corpus, which is two.

24
00:00:56.940 --> 00:00:59.450
The number of all tag
pairs starting with

25
00:00:59.450 --> 00:01:03.005
a blue tag is three for
this corpus at least.

26
00:01:03.005 --> 00:01:05.480
Two out of three
tag sequences in

27
00:01:05.480 --> 00:01:07.190
your training corpus starts

28
00:01:07.190 --> 00:01:09.115
with the blue parts
of speech tag.

29
00:01:09.115 --> 00:01:12.545
In other words, the
transition probability for

30
00:01:12.545 --> 00:01:16.760
a blue tag following a purple
one is two out of three.

31
00:01:16.760 --> 00:01:19.475
More formally, in
order to calculate

32
00:01:19.475 --> 00:01:22.655
all the transition probabilities
of your Markov model,

33
00:01:22.655 --> 00:01:24.110
you'd first have to count

34
00:01:24.110 --> 00:01:27.800
all occurrences of tag pairs
in your training corpus.

35
00:01:27.800 --> 00:01:30.830
I'll define this as
the function C of

36
00:01:30.830 --> 00:01:34.500
the tags t_i minus
1 comma t_i which

37
00:01:34.500 --> 00:01:37.380
returns the counts
for the tag t_i minus

38
00:01:37.380 --> 00:01:41.450
1 followed by the tag t_i
in your training corpus.

39
00:01:41.450 --> 00:01:44.315
Next, you calculate
the probability

40
00:01:44.315 --> 00:01:47.255
of a tag t_i following
another tag,

41
00:01:47.255 --> 00:01:52.280
t_i minus 1 as P of
t_i given t_i minus 1.

42
00:01:52.280 --> 00:01:57.350
This counts of t_i minus 1
comma t_i in the numerator,

43
00:01:57.350 --> 00:01:59.945
which is the number
of occurrences of

44
00:01:59.945 --> 00:02:02.660
t_i minus 1 comma t_i in

45
00:02:02.660 --> 00:02:05.045
the corpus divided by the sum of

46
00:02:05.045 --> 00:02:07.955
all occurrences of the
tag t_i minus one,

47
00:02:07.955 --> 00:02:11.075
together with all
the other tags t_j.

48
00:02:11.075 --> 00:02:13.615
This will become more clear
in the following slides.

49
00:02:13.615 --> 00:02:15.340
I'll write this as P for

50
00:02:15.340 --> 00:02:19.730
the probability of t_i
given t_i minus 1.

51
00:02:19.730 --> 00:02:22.835
This probability is given by
the total number of times

52
00:02:22.835 --> 00:02:26.540
tag t_i occurred after
tag t_i minus 1,

53
00:02:26.540 --> 00:02:29.260
which is given by the
function counts of

54
00:02:29.260 --> 00:02:32.865
t_i comma t_i minus
1 in the numerator,

55
00:02:32.865 --> 00:02:35.360
and then divide it
by the number of

56
00:02:35.360 --> 00:02:39.180
total occurrences of
the tag t_i minus 1,

57
00:02:39.180 --> 00:02:41.295
given by the function counts of

58
00:02:41.295 --> 00:02:43.950
t_i minus 1 and the divisor.

59
00:02:43.950 --> 00:02:46.940
Say you want to train
a model for haiku,

60
00:02:46.940 --> 00:02:49.295
a type of shorts
Japanese poetry.

61
00:02:49.295 --> 00:02:51.965
Your training corpus will
be the following haiku

62
00:02:51.965 --> 00:02:55.885
from Ezra Pound written in 1913.

63
00:02:55.885 --> 00:02:57.800
In the programming assignments,

64
00:02:57.800 --> 00:03:00.125
you'll be given a
prepared corpus.

65
00:03:00.125 --> 00:03:02.675
Here, you'll make some
changes to the corpus

66
00:03:02.675 --> 00:03:05.375
in order to calculate the
correct probabilities.

67
00:03:05.375 --> 00:03:08.870
Consider each line of the
corpus as a separate sentence.

68
00:03:08.870 --> 00:03:11.090
First, at the start token to

69
00:03:11.090 --> 00:03:13.130
each line or sentence
in order to be

70
00:03:13.130 --> 00:03:16.160
able to calculate the
initial probabilities

71
00:03:16.160 --> 00:03:18.175
using the previous
defined formula.

72
00:03:18.175 --> 00:03:21.590
Then transform all
words in the corpus to

73
00:03:21.590 --> 00:03:24.925
lowercase so the model
becomes case insensitive.

74
00:03:24.925 --> 00:03:27.515
The punctuation you
should leave intact

75
00:03:27.515 --> 00:03:30.680
because it doesn't make a
difference for a toy model,

76
00:03:30.680 --> 00:03:31.880
and there aren't tags for

77
00:03:31.880 --> 00:03:34.435
different kinds of
punctuation included here.

78
00:03:34.435 --> 00:03:37.620
There you have it and
nicely prepared corpus.

79
00:03:37.620 --> 00:03:39.950
You learned how to calculate
the probability of

80
00:03:39.950 --> 00:03:42.410
a tag showing up
after another tag.

81
00:03:42.410 --> 00:03:44.630
You saw how you can
get the counts,

82
00:03:44.630 --> 00:03:46.430
and then you can use
those counts and

83
00:03:46.430 --> 00:03:48.610
transform them into
probabilities.

84
00:03:48.610 --> 00:03:50.780
This is useful
because it allows you

85
00:03:50.780 --> 00:03:52.984
to populate your
transition matrix.

86
00:03:52.984 --> 00:03:55.800
This is what you'll
be learning next.